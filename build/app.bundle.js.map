{"version":3,"sources":["webpack://framework/./src/framework.js","webpack://framework/./src/index.jsx"],"names":["type","props","children","updateElement","$parent","newNode","oldNode","index","node1","node2","replaceChild","createElement","childNodes","newLength","length","oldLength","i","removeChild","appendChild","passPropsToChildren","state","node","forEach","child","$el","document","createTextNode","obj","html","render","console","log","Array","isArray","map","bind","class","className","onClick","addEventListener","onHover","passEventListener","a","this","constructor","super","abc","hover","$root","getElementById","$reload"],"mappings":"mBAOO,SAAS,EAAEA,EAAMC,KAAUC,GAChC,MAAO,CAAEF,OAAMC,QAAOC,YAGjB,SAASC,EAAcC,EAASC,EAASC,EAASC,EAAQ,GAC/D,GAAKD,EAEE,GAAKD,GAEL,UAgEQG,EAhEIH,WAgEGI,EAhEMH,IAmER,iBAAVE,GAAsBA,IAAUC,GACxCD,EAAMR,OAASS,EAAMT,KAnErBI,EAAQM,aAAaC,EAAcN,GAAUD,EAAQQ,WAAWL,SAC3D,GAAIF,EAAQL,KAAM,CACvB,MAAMa,EAAYR,EAAQH,SAASY,OAC7BC,EAAYT,EAAQJ,SAASY,OACnC,IAAK,IAAIE,EAAI,EAAGA,EAAIH,GAAaG,EAAID,EAAWC,IAC9Cb,EACEC,EAAQQ,WAAWL,GACnBF,EAAQH,SAASc,GACjBV,EAAQJ,SAASc,GACjBA,SAXJZ,EAAQa,YAAYb,EAAQQ,WAAWL,SAFvCH,EAAQc,YAAYP,EAAcN,IAmEtC,IAAiBG,EAAOC,EAhDxB,SAASU,EAAoBC,EAAOC,GAClC,GAAoB,iBAATA,EAKT,OAJAA,EAAKD,MAAQA,EACTC,EAAKnB,UACPmB,EAAKnB,SAASoB,SAASC,GAAUJ,EAAoBC,EAAOG,KAEvDF,EAeJ,SAASV,EAAcU,GAC5B,IAAIG,EACJ,GAAoB,iBAATH,GAAqC,iBAATA,EACrC,OAAOI,SAASC,eAAeL,GAEjC,GAAyB,mBAAdA,EAAKrB,KAAqB,CACnC,IAAI2B,EAAM,IAAIN,EAAKrB,KAAKqB,EAAKpB,MAAOoB,EAAKnB,UACrC0B,EAAOD,EAAIE,SACfD,EAAOT,EAAoBQ,EAAIP,MAAOQ,GACtCE,QAAQC,IAAIH,GACZJ,EAAMb,EAAciB,QAEpBJ,EAAMC,SAASd,cAAcU,EAAKrB,MAC9BgC,MAAMC,QAAQZ,EAAKnB,SAAS,KAAOmB,EAAKnB,SAAS,GAAGY,OAAS,EACrDO,EAAKnB,SAAS,GACtBgC,IAAIvB,GAAeW,QAAQE,EAAIN,YAAYiB,KAAKX,IAElDH,EAAKnB,SAASgC,IAAIvB,GAAeW,QAAQE,EAAIN,YAAYiB,KAAKX,IAOlE,OAJIH,EAAKpB,OAASoB,EAAKpB,MAAMmC,QAC3BZ,EAAIa,UAAYhB,EAAKpB,MAAMmC,OAhC/B,SAA2BZ,EAAKH,GAC1BA,EAAKpB,QACHoB,EAAKpB,MAAMqC,SACbd,EAAIe,iBAAiB,QAASlB,EAAKpB,MAAMqC,QAAQH,KAAKd,IAEpDA,EAAKpB,MAAMuC,SACbhB,EAAIe,iBAAiB,YAAalB,EAAKpB,MAAMuC,QAAQL,KAAKd,KA4B9DoB,CAAkBjB,EAAKH,GAChBG,ECjCT,MAAMkB,EACJ,aACE,EAzCJ,cDLO,MACL,YAAYzC,EAAOC,GACjByC,KAAK1C,MAAQA,EACb0C,KAAKzC,SAAWA,ICGlB0C,YAAY3C,EAAOC,GACjB2C,MAAM5C,EAAOC,GACbyC,KAAKvB,MAAQ,CACX0B,IAAK,KACLC,MAAO,SAGXT,UACER,QAAQC,IAAIY,KAAKvB,MAAM0B,KAEzBN,UACEV,QAAQC,IAAIY,KAAKvB,MAAM2B,OAEzBlB,SACE,OACE,aACE,SAAKW,QAASG,KAAKH,QAASF,QAASK,KAAKL,SACvCK,KAAKvB,MAAM0B,KAEd,aAAMH,KAAKzC,aAqBf,KACE,0BAKA8C,EAAQvB,SAASwB,eAAe,QAChCC,EAAUzB,SAASwB,eAAe,UAExC9C,EAAc6C,EAAON,GACrBQ,EAAQX,iBAAiB,SAAS,KAChCpC,EAAc6C,EAAON,EAAGA,O","file":"app.bundle.js","sourcesContent":["export class Component {\n  constructor(props, children) {\n    this.props = props;\n    this.children = children;\n  }\n}\n\nexport function h(type, props, ...children) {\n  return { type, props, children };\n}\n\nexport function updateElement($parent, newNode, oldNode, index = 0) {\n  if (!oldNode) {\n    $parent.appendChild(createElement(newNode));\n  } else if (!newNode) {\n    $parent.removeChild($parent.childNodes[index]);\n  } else if (changed(newNode, oldNode)) {\n    $parent.replaceChild(createElement(newNode), $parent.childNodes[index]);\n  } else if (newNode.type) {\n    const newLength = newNode.children.length;\n    const oldLength = oldNode.children.length;\n    for (let i = 0; i < newLength || i < oldLength; i++) {\n      updateElement(\n        $parent.childNodes[index],\n        newNode.children[i],\n        oldNode.children[i],\n        i\n      );\n    }\n  }\n}\n\nfunction passPropsToChildren(state, node) {\n  if (typeof node !== \"string\") {\n    node.state = state;\n    if (node.children) {\n      node.children.forEach((child) => passPropsToChildren(state, child));\n    }\n    return node;\n  }\n}\n\nfunction passEventListener($el, node) {\n  if (node.props) {\n    if (node.props.onClick) {\n      $el.addEventListener(\"click\", node.props.onClick.bind(node));\n    }\n    if (node.props.onHover) {\n      $el.addEventListener(\"mouseover\", node.props.onHover.bind(node));\n    }\n  }\n}\n\nexport function createElement(node) {\n  let $el;\n  if (typeof node === \"string\" || typeof node === \"number\") {\n    return document.createTextNode(node);\n  }\n  if (typeof node.type === \"function\") {\n    let obj = new node.type(node.props, node.children);\n    let html = obj.render();\n    html = passPropsToChildren(obj.state, html);\n    console.log(html);\n    $el = createElement(html);\n  } else {\n    $el = document.createElement(node.type);\n    if (Array.isArray(node.children[0]) && node.children[0].length > 0) {\n      const a = node.children[0];\n      a.map(createElement).forEach($el.appendChild.bind($el));\n    } else {\n      node.children.map(createElement).forEach($el.appendChild.bind($el));\n    }\n  }\n  if (node.props && node.props.class) {\n    $el.className = node.props.class;\n  }\n  passEventListener($el, node);\n  return $el;\n}\n\nfunction changed(node1, node2) {\n  return (\n    typeof node1 !== typeof node2 ||\n    (typeof node1 === \"string\" && node1 !== node2) ||\n    node1.type !== node2.type\n  );\n}\n","import { h, Component, updateElement } from \"./framework.js\";\n/** @jsx h */\n\n// ---------------------------------------------------------------------\n\nclass App extends Component {\n  constructor(props, children) {\n    super(props, children);\n    this.state = {\n      abc: \"ok\",\n      hover: \"hover\",\n    };\n  }\n  onClick() {\n    console.log(this.state.abc);\n  }\n  onHover() {\n    console.log(this.state.hover);\n  }\n  render() {\n    return (\n      <div>\n        <div onHover={this.onHover} onClick={this.onClick}>\n          {this.state.abc}\n        </div>\n        <div>{this.children}</div>\n      </div>\n    );\n  }\n}\n\nclass Box extends Component {\n  constructor(props, children) {\n    super(props, children);\n  }\n  render() {\n    return (\n      <section>\n        <h2>BOX Component</h2>\n      </section>\n    );\n  }\n}\n\nconst a = (\n  <div>\n    <App>\n      <div>efjefeo</div>\n    </App>\n  </div>\n);\n\nconst $root = document.getElementById(\"root\");\nconst $reload = document.getElementById(\"reload\");\n\nupdateElement($root, a);\n$reload.addEventListener(\"click\", () => {\n  updateElement($root, a, a);\n});\n"],"sourceRoot":""}